definitions:
  dto.Content:
    properties:
      comment_count:
        type: integer
      id:
        type: integer
      is_premium:
        type: boolean
      like_count:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      type_id:
        type: integer
    required:
    - name
    type: object
  dto.ContentLikePayload:
    properties:
      type:
        type: string
    type: object
  dto.ContentPaginate:
    properties:
      data:
        items:
          $ref: '#/definitions/entity.Content'
        type: array
      limit:
        type: integer
      page:
        type: integer
      totalItems:
        type: integer
    type: object
  dto.ContentType:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  dto.ContentTypePaginate:
    properties:
      data:
        items:
          $ref: '#/definitions/dto.ContentType'
        type: array
      limit:
        type: integer
      page:
        type: integer
      totalItems:
        type: integer
    type: object
  dto.ContentTypePayload:
    properties:
      name:
        type: string
      updated_at:
        type: string
    type: object
  entity.Content:
    properties:
      comment_count:
        type: integer
      created_at:
        type: string
      deleted:
        type: boolean
      deleted_at:
        type: string
      deleted_by:
        type: integer
      id:
        type: integer
      is_premium:
        type: boolean
      like_count:
        type: integer
      name:
        type: string
      owner_id:
        type: integer
      type_id:
        type: integer
      updated_at:
        type: string
    type: object
  github_com_tangguhriyadi_content-service_internals_module_v1_content_dto.ContentPayload:
    properties:
      is_premium:
        type: boolean
      name:
        type: string
    required:
    - name
    type: object
info:
  contact: {}
paths:
  /contents:
    get:
      consumes:
      - application/json
      description: get content list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ContentPaginate'
      security:
      - Bearer: []
      summary: get content list
      tags:
      - contents
  /contents/:id:
    delete:
      consumes:
      - application/json
      description: delete content
      parameters:
      - description: Content ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Content'
      security:
      - Bearer: []
      summary: delete content
      tags:
      - contents
    get:
      consumes:
      - application/json
      description: get content by ID
      parameters:
      - description: Content ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Content'
      security:
      - Bearer: []
      summary: get content by ID
      tags:
      - contents
    patch:
      consumes:
      - application/json
      description: update content
      parameters:
      - description: Content ID
        in: path
        name: id
        required: true
        type: string
      - description: The input struct
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_tangguhriyadi_content-service_internals_module_v1_content_dto.ContentPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_tangguhriyadi_content-service_internals_module_v1_content_dto.ContentPayload'
      security:
      - Bearer: []
      summary: update content
      tags:
      - contents
    post:
      consumes:
      - application/json
      description: create content
      parameters:
      - description: The input struct
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/github_com_tangguhriyadi_content-service_internals_module_v1_content_dto.ContentPayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Content'
      security:
      - Bearer: []
      summary: create content
      tags:
      - contents
  /contents/:id/like:
    post:
      consumes:
      - application/json
      description: post content like
      parameters:
      - description: content id
        in: path
        name: id
        required: true
        type: string
      - description: type
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.ContentLikePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ContentLikePayload'
      security:
      - Bearer: []
      summary: post content like
      tags:
      - contents
  /contents/:id/types:
    get:
      consumes:
      - application/json
      description: get content type list
      parameters:
      - description: page
        in: query
        name: page
        type: string
      - description: limit page
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ContentTypePaginate'
      security:
      - Bearer: []
      summary: get content type list
      tags:
      - types
    post:
      consumes:
      - application/json
      description: create content type by id
      parameters:
      - description: id
        in: path
        name: id
        type: string
      - description: The input struct
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.ContentTypePayload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ContentTypePayload'
      security:
      - Bearer: []
      summary: create content type by id
      tags:
      - types
  /contents/:id/types/:type_id:
    get:
      consumes:
      - application/json
      description: get content type by id
      parameters:
      - description: id
        in: path
        name: id
        type: string
      - description: type_id
        in: path
        name: type_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ContentTypePaginate'
      security:
      - Bearer: []
      summary: get content type by id
      tags:
      - types
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
